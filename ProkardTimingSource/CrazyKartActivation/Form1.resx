<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADCwb3/qKai/6Shnf+koJv/o5+a/6Winf+tqqn/5OLh/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2tbX/sK6u/62rq/+trKv/srCw/7m3
        tv/c3Nr/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALq5uP+7ubj/vLq5/9PT
        0v8AAAAAAAAAAAAAAADp5+b/qKSj/5mVkv+ZlI//lZCL/5eSjP+YkYn/l5GK/5ONhv+5tLD/p6Kf/5+b
        mP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqaen/7e1tf+6uLj/pqSk/6Wj
        o/+lo6L/qaem/7q4t/+zsbD/kI6N/6impf+0s7L/1dXV/wAAAAAAAAAAAAAAAAAAAAAAAAAAsrKy/8jH
        xv9raWj/NDIx/1RTU/+EhIT/1dXV/7m2tP+Yko7/op2Y/6SemP/Gv7f/1c7G/9TNxf/Yz8b/187E/9DI
        vv+blI7/e3Ru/8C5s/+Kion/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK6urv/Ew8P/o6Gh/7Cv
        r/8AAAAAAAAAAAAAAAAAAAAAAAAAAN7d3P+XlJP/sayr/4F9fP+5tbT/rq6u/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAn5yY/5CMiP+QjIf/RkE9/zk1MP9dWVT/mZWR/5+Zlf+imZX/0MfD/9bNx//Yzsf/2M7H/9jO
        x//Yzsf/183G/9bMxf/Yzsf/0cfA/3BmYP+/uLL/VlBN/29ra/9xb2//cnBw/3t6ev/S0ND/rq2s/8jG
        xf+ioaH/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOLh4P+Qjo7/p6Wk/5eVlP+uq6r/fHh3/56d
        nP8AAAAAAAAAAAAAAADT0tL/oJyY/6mjnP/Uzsb/1M7G/9TOxv/LxLz/xL62/7Krpf93bmr/p56a/9bN
        x//Yzsf/2M7H/9jOx//Yzsf/183G/8vBuv/Yzsf/183G/9PJwv9yamX/kIuH/wAAAAAAAAAAAAAAAAAA
        AABycG//w8HA/6Kgn/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALOxsP+joaD/paOi/wAA
        AAAAAAAAqaSj/62rqv8AAAAAAAAAAAAAAACzsrH/k5CM/9bPxv/Xz8X/18/F/9fPxf/Xz8X/18/F/8e+
        t/+KgX7/lYyI/6OZlf+flY7/oZeQ/8/Fvv/Yzsf/vbOs/3lvaP+jmZL/183G/9bMxf+IgHv/nJeT/727
        uv8AAAAAAAAAALGvr/9zcXD/enh4/4uKif/Nzcz/6Ojo/wAAAAAAAAAAAAAAAAAAAADZ2dj/s7Gw/6+t
        rP+Vk5L/qqin/wAAAAAAAAAAuLOy/7Cvrv8AAAAAAAAAAAAAAAB9fHf/xb+3/9fOxv/Yzsf/2M7H/9jO
        x//Yzsf/183G/8i+uP++s6z/2M7D/9fNwv/Wz8b/1c7G/8O7s//WzMb/x723/5mPiv+gmJL/qKCa/6Ka
        lP+Ri4b/kIuK/5yZmf+0srH/u7m4/7Kwr/+tq6r/uLa2/8PBwf/BwL//tbOy/6mnp/+qqKj/srCv/7e1
        tP+EgoH/lZOS/+Lh4P+mpKP/rq2s/wAAAADHxcT/x8TE/7q5uf8AAAAAAAAAAAAAAACWk47/1s7G/9jO
        xv/Yzsf/2M7H/9jOx//Yzsf/183G/9fMxf/YzcX/1c3E/9PNxf+/urT/m5WQ/5eSjf+in5//o5+f/6mm
        pv+9urr/v7y8/6ypqP+blZH/f3t6/399ff+6uLj/1NPS/5qYl/+gnp7/3dzc/5KRkf+KiYj/t7a1/7Kx
        sP+trKv/paOi/6Gfnv/Bv77/w8HA/6ako//Lycj/iYeH/7u6uf+cm5r/sa+v/+Lh4f8AAAAAAAAAAK+u
        q//KxL//2c7G/9nOx//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jNxf/Qxr//bGdk/0JAPf9/fHj/ysfD/4iF
        gf+in5v/n5yY/3Rwbf9oY2D/rqml/8rEwP+hm5f/bmpp/xQSEv/JyMf/09HQ/768u/+rqqn/AAAAAM/O
        zv91c3P/u7q5/7OxsP+ysK//rauq/5KQj/+Qjo3/lpST/399fP+/vbz/h4WE/7OxsP+0srH/fnx8/wAA
        AAAAAAAAAAAAAJuTj//Xzcf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jNxv9dWFX/AQEC/wEB
        Av8xMDD/n5yY/6+tq/+gnZb/gnx1/5mRi/+jn5r/gHp0/9XNxf+qpJ//TUhH/wUDA/8yMTD/npyb/7Cu
        rf/h4N//AAAAANfW1f9mZGP/qqin/7Curf+wr67/kpCP/8LAv/+rqan/zczM/5iWlv+gnp7/t7W0/56d
        nP+UkpL/m5ub/wAAAAAAAAAA0c3O/7atp//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jO
        x/8eGxn/AAAC/wABAf8GBAP/jYeB/5KQjf+8urb/e3Zx/6+opP+UkY3/bWhi/9fQyP+XkY3/S0dF/0lH
        SP9pZ2b/fnx7/5WTkv+qqKf/rKqp/6Cenf9+fHv/tbOy/728u//V1NP/paOi/66sq/8AAAAA6Ofn/7Kw
        sP+vra3/AAAAAL28u//Mysn/AAAAAAAAAAAAAAAApJ+g/9fNyP/Xzcb/2M7H/9jOx//Yzsf/2M7H/9jO
        x//Yzsf/2M7H/9nPx/9LR0X/AAAC/wECAf8uKib/08vC/5iVkP/V1tT/p6Wj/5aSkP+IhYH/pZ+a/7qz
        q/+dl5P/w7++/4+Njv+EgoL/m5mY/6uqqf+ysK//r62s/5mXlv+npaT/tbOy/8PBwP++vLv/sa+u/6Oh
        oP+qqKj/mJaW/7m3t/+rqan/AAAAAKmnpv+rqaj/6+vr/wAAAAAAAAAAoJmX/9fNx//Yzsf/2M7H/9fQ
        xP/Yzsf/18zF/9XPxP/Xz8b/2M/G/9fOxv/Lw77/d3Ft/3t0b//Kwrv/2c/H/7ixq/9/fXj/jYmH/4R9
        fP/BurT/tK6q/6+rqf+Rj43/ExER/wMCAv+SkZD/p6Wk/wAAAAAAAAAAAAAAAGJgYP8AAAAA7evq/6Gf
        nv9pZmb/k4+O/6eiof+sqKf/rqqp/4N/fv+/u7v/srCw/5iWlv+npaX/AAAAAAAAAAAAAAAApZyZ/9jO
        x//Yzsf/2M7H/9jPxf/Xzsj/va+m/7aonf/Xz8X/19DF/9jOxf/Yzsf/183G/9fNxv/Xzcb/2M7H/9fO
        x/+XkYv/v7q3/5uWlf+wqaT/t7Kv/5WRj/9kY2P/AgIC/yYmJv/Avr7/tLOz/wAAAAAAAAAA4uDg/0tJ
        Sf/p5+f/pKOi/7y6uf+mo6L/npua/7azsv+4trX/rKmo/62qqf+Zlpb/l5WV/5aUlP/d3Nz/AAAAAAAA
        AADJx8b/w7q3/9fNx//Yzsf/2M7H/9nOx//Vzsn/rpyQ/21RRv/Yz8X/1dDF/9rOxv/Yzsf/2M7H/9jO
        x//Yzsf/2M7H/9jNxv/Xzcj/npqX/5+fnf+zr67/o52Z/7avqf9mZWX/AgIC/4WFhf9ramr/NTMz/7i2
        tv+7ubn/OTc3/2JgYP+hn5//sa+u/4WDgv/Cwb//zs7N/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACuq6j/1c3G/9jPx//Yzsf/2M7H/9jOx//Zzcb/mYh9/31mW/+1o5r/ztDF/9zN
        x//Yzsf/2M7H/9jPxv/Yz8T/18/F/9fPx//Xzcb/zMO8/5WUkv+TlJH/vrWx/8nBuf9lYmD/HRwb/8PD
        w/8RERH/AgEB/wMCAv8DAQH/Kigo/3Vzcv+pp6b/3Nva/6OhoP+qqaj/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrqKX/1s/H/9jOx//Yzsf/2M7H/9fPxv/czsX/iHlw/93X
        zP9uVk3/18rC/9jNxv/Yzsf/2M7H/9fOx//Wzsf/18/G/9jPxv/bz8X/2c/F/5aSjv+2trL/n5eR/9bP
        x/96dnL/f318/3R0dP8AAAD/AAAA/wAAAP8CAAD/KScm/2hmZf/Z2Nf/ycjH/7+9vf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkoZ7/1c7F/9jOx//Yzsf/2M7H/9fP
        xv/dz8b/g3Rr/5+RhP+gk4X/o4yC/9XOxf/Yzsf/2M7H/9jMxv/bzMX/xrOm/5yGdv+DcWT/0cnA/9TP
        xf+dl5T/urmy/7eyqf+Df3r/xsTD/xcYGP8BAQH/AAAA/wAAAP8CAAD/CAYG/3Fvbv8AAAAAp6Wk/6yq
        qf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClop//1c7F/9jO
        xv/Yzsf/2M7H/9vNx//b0MT/g3Ro/4tvYf+QgXP/bFxQ/8zCtv/Rxr7/rJqQ/4FtYP9zYVb/jH1w/1g6
        K//Cs6n/1s7G/9fPxf/Du7f/sa+q/6Gdmf+clpL/jouI/xUWFP8AAQH/AAEB/wAAAP8BAAD/AgEB/1BQ
        UP9+fHz/s7Gx/6+trf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACppqP/18/H/9jOx//Yzsf/2M7H/9fOx//V0cL/iXdq/4RpVv9IKBf/rqGW/1pJO/9/cGP/qpyV/66g
        mv/DurD/loZ+/6+dkv/Xzcb/183G/9jOx//Vzcb/p6Gd/6Ccm//JyMT/k5CM/3lzcP8SERD/AgEB/wEA
        AP8BAAD/AQEB/wUEBP8MCwv/YmBg/6WkpP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACsqab/1c3F/9bNxf/WzMX/2M7H/9jNxP/Ux7f/fGhf/31kUv9KJAz/aU4//6eW
        j/9wW1D/RikX/2FENP+uppr/k3lu/9fPxv/Yzsf/2M7H/9jOx//Zz8b/1c3H/5OOiv+NjIn/nZmW/52X
        lP+fm5j/X1xa/zAtKv80MS//W1hV/4OBf/9+fHv/iYiI/8rIyP+4t7f/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyMX/vbew/9TNxP/LubD/n4uB/4BlXP+AbmL/rJ6X/2hO
        Qf9KIw7/SyQQ/0YjD/9PJA//SCsa/7isoP97XlX/3M/C/9fNxv/Yzsf/2M7H/9jOx//Zz8X/183G/9bO
        yP+1rKj/opyX/8G+uf+vrKj/oJ2Y/56bl/+mo53/jImE/726t//c2tn/0c/P/+7t7f+dm5v/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm5aS/6COgf9lSj//u7Cl/5SL
        fv9pVEX/SCYU/0sjEP9LIxD/SyMQ/0gkD/9KIxH/oZKF/21aT//MwbX/18/G/9rNx//Yzsf/2M7H/9jO
        x//Yzsf/2M7H/9jOx//Xzcb/183G/7qwqf+fmpb/oZyY/66ppf++u7X/pqOe/52ZmP+Jh4b/dHJx/2Be
        Xf9ubWz/lpST/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm5aS/9bP
        wv+snZP/hnRt/6iZjv9wVUT/RyUP/0slD/9MJBH/SyMQ/0wkEP9PLRr/tKqc/4xzaf/Y0MP/1s7F/9vN
        x//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Xzsf/187H/87Fvv+uqqP/dnNv/5OP
        jv+Oi4r/p6Wk/5ORkP+cmpn/nZua/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtLGu/8rAu//XzsX/0ce7/5N/dv+Ge3D/qZmQ/3JUR/9LJQ//SSQP/0kiEP9OJBH/cFpL/41+
        dP+um5H/2c/D/9bNxv/Yzsb/2M7G/9jOxv/Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Zzsb/2c3G/9nN
        xv/NycH/gX96/4qHhf+ppaT/kpCP/357ev+gnp3/vLu6/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJePiv/WzsX/19DE/9bOxv/Wxbn/f2pd/5GEd/9PJQ7/RSQO/2BC
        Nf9GJRL/QyUR/31pXf+Gc2j/tqaY/9jPxv/Zz8X/2c/F/9nPxf/Yzsf/2M7H/9jOx//Yzsf/2M7H/9jO
        x//Yzsf/183G/9bMxf+loZr/kY+K/6iko/+Cfn7/dHBv/5iUk/+vra3/pKSk/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCuq//Dvrf/1s7F/9jPxf/YzsX/t6ea/5GF
        ef9MIBD/ZUo6/7Kjmf+din7/oY5//4FqWv+UhHr/fm5m/7monf/YzsT/2c/F/9nPxf/Yzsf/2M7H/9jO
        x//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx/+ypaD/X09F/2ZcWP9zb2//YV1d/4J/fv+XlZT/3t7e/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQjYn/1czE/9jP
        xP/Wzsf/18m+/457cf9PLCH/raKW/3BeUf+zppn/hXRs/31pXf+Pg3f/u7Go/3RhU/+0o5f/287E/9fO
        xf/Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yz8b/2c7H/9jPx/+NdGj/RSMQ/5KDeP++u7r/tLKx/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADf3tz/npeP/9fOx//Zzsf/2szG/4t3a/+bhX3/jHxx/7+zp//Yzsf/1szF/9nPxv/NwbX/r5uQ/492
        av9vVUf/sKGX/9PNx//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yzsb/1s3G/6+gkP9LJhL/aFJE//bz
        7/+hoKH/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKainP/Vzsf/2M7H/6aUiv+3rZ//h2tf/9bPxf/Yzsf/2M7H/9fO
        x//Vzsj/2M7I/9jOx//X0MX/1c3D/9fOxv/Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//azMn/u7Gj/1Ax
        Hv9fPzL/6Ofe/6WmpP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjHw/+jnpj/18/I/9LJwf9aQTX/wrip/9jO
        xv/Yzsf/2M7H/9jOx//Zz8b/2M/G/9fOxv/Yzcj/2M7H/9jPxv/Yzsf/2M7H/9nNyP/Wzsf/2c3H/9bO
        x/+4q5//VjIi/2FDN//j39j/rauo/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADX1tP/lo+J/9XJ
        xP/DtrD/2c/F/9jPxv/Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yz8X/2M7H/9jN
        yf/XzcX/1M3C/52Lf/9IKhr/c1tS/+Te3P8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKKfnP+tqKT/1c3G/9jOx//Yzsf/2M7H/9jOx//Yzsf/2M7H/9jOx//Yzsf/183G/9fN
        xf/Xz8X/1c/E/9XQxP/BsaT/blJD/1AyH/+tnZP/x8rE/6ipqP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADX2Nb/o56b/6yjnf/VzMX/2M7H/9jOx//Yzsf/2M7G/9jO
        xv/Xzsb/1s3F/9bNxf/Pxbv/qpqN/29XSP9TNyb/mYh8/8G7tP+oqaf/19TU/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOLj4f+uraj/lIyI/4d5
        dP+XiH//n5CH/5yLgv+WfnP/hGxh/3JZTv9sVEX/g3Fk/5OIfv+qqaj/r6+u/9ra2v8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADLx8L/r6mk/6mjn/+lop3/qKei/7e0sP+1tK//wMC//wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA////////AAD//gH/8B8AAPhwAP/AAQAA8AAAfw+BAADwAAAAP4AAAOAA
        ADx/jAAA4AAAGB4MAADgAAAAAAgAAOAAAAAAAAAAwAAAAQABAADAAAABAAEAAIAAAAABEwAAgAAAAAAR
        AACAAAAHQAMAAIAAAAYAAwAAAAAAAAP/AAAAAAAAB/8AAAAAAAAP/wAAAAAAAE//AAAAAAAAD/8AAAAA
        AAAP/wAAAAAAAAf/AAAAAAAAB/8AAIAAAAAD/wAAgAAAAAP/AACAAAAAA/8AAMAAAAAD/wAAwAAAAAP/
        AADgAAAAH/8AAOAAAAA//wAA+AAAAH//AAD4AAAA//8AAPwAAAP//wAA/wAAA///AAD/gAAH//8AAP/g
        AB///wAA//4B////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>